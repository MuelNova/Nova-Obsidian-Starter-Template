@inproceedings{yang1dFuzzReproduce1Day2023,
  title = {{{1dFuzz}}: {{Reproduce}} 1-{{Day Vulnerabilities}} with {{Directed Differential Fuzzing}}},
  shorttitle = {{{1dFuzz}}},
  booktitle = {Proceedings of the 32nd {{ACM SIGSOFT International Symposium}} on {{Software Testing}} and {{Analysis}}},
  author = {Yang, Songtao and He, Yubo and Chen, Kaixiang and Ma, Zheyu and Luo, Xiapu and Xie, Yong and Chen, Jianjun and Zhang, Chao},
  year = {2023},
  month = jul,
  pages = {867--879},
  publisher = {ACM},
  address = {Seattle WA USA},
  doi = {10.1145/3597926.3598102},
  urldate = {2024-08-19},
  abstract = {1-day vulnerabilities are common in practice and have posed severe threats to end users, as adversaries could learn from released patches to find them and exploit them. Reproducing 1-day vulnerabilities is also crucial for defenders, e.g., to block attack traffic against 1-day vulnerabilities. A core question that affects the effectiveness of recognizing and triggering 1-day vulnerabilities is what is the unique feature of a security patch. After conducting a large-scale empirical study, we point out that a common and unique feature of patches is the trailing call sequence (TCS) and present a novel directed differential fuzzing solution 1dFuzz to efficiently reproduce 1-day vulnerabilities in this paper. Based on the TCS feature, we present a locator 1dLoc able to find candidate patch locations via static analysis, a novel TCS-based distance metric for directed fuzzing, and a novel sanitizer 1dSan able to catch PoCs for 1-day vulnerabilities during fuzzing. We have systematically evaluated 1dFuzz on a set of real-world software vulnerabilities in 11 different settings. Results show that 1dFuzz significantly outperforms state-of-the-art (SOTA) baselines and could find up to 2.26x more 1-day vulnerabilities with a 43\% shorter time.},
  isbn = {9798400702211},
  langid = {english},
  keywords = {,project/PaperBell},
  file = {D:\Data\OneDriveRAW\OneDrive - novanoir\NovaNo1r\zotero\storage\FZHTJJI5\Yang ç­‰ - 2023 - 1dFuzz Reproduce 1-Day Vulnerabilities with Directed Differential Fuzzing.pdf}
}

@misc{AddonItem,
  title = {Addon {{Item}}},
  note = {5D2CNQIT\{"readingTime":\{"page":15,"data":\{"0":570\}\}\}
\par
SGZHRU2F\{"readingTime":\{"page":13,"data":\{"0":220,"1":30,"2":580,"3":10,"4":780,"5":1010,"6":70,"7":240,"8":10,"9":20,"10":170,"11":190,"12":80\}\}\}}
}

@inproceedings{liPACMemEnforcingSpatial2022,
  title = {{{PACMem}}: {{Enforcing Spatial}} and {{Temporal Memory Safety}} via {{ARM Pointer Authentication}}},
  shorttitle = {{{PACMem}}},
  booktitle = {Proceedings of the 2022 {{ACM SIGSAC Conference}} on {{Computer}} and {{Communications Security}}},
  author = {Li, Yuan and Tan, Wende and Lv, Zhizheng and Yang, Songtao and Payer, Mathias and Liu, Ying and Zhang, Chao},
  year = {2022},
  month = nov,
  pages = {1901--1915},
  publisher = {ACM},
  address = {Los Angeles CA USA},
  doi = {10.1145/3548606.3560598},
  urldate = {2024-08-19},
  isbn = {978-1-4503-9450-5},
  langid = {english},
  keywords = {,project/PaperBell},
  file = {D:\Data\OneDriveRAW\OneDrive - novanoir\NovaNo1r\zotero\storage\UC64KYEH\Li et al. - 2022 - PACMem Enforcing Spatial and Temporal Memory Safety via ARM Pointer Authentication.pdf}
}
